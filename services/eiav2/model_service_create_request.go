/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// checks if the ServiceCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceCreateRequest{}

// ServiceCreateRequest struct for ServiceCreateRequest
type ServiceCreateRequest struct {
	Tags        []string    `json:"tags,omitempty"`
	Name        *string     `json:"name,omitempty"`
	Description *string     `json:"description,omitempty"`
	Type        ServiceType `json:"type"`
	// Collection of service connections uuids
	Connections          []string               `json:"connections"`
	RoutingProtocol      RoutingProtocolRequest `json:"routingProtocol"`
	Order                *ServiceOrderRequest   `json:"order,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceCreateRequest ServiceCreateRequest

// NewServiceCreateRequest instantiates a new ServiceCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCreateRequest(type_ ServiceType, connections []string, routingProtocol RoutingProtocolRequest) *ServiceCreateRequest {
	this := ServiceCreateRequest{}
	this.Type = type_
	this.Connections = connections
	this.RoutingProtocol = routingProtocol
	return &this
}

// NewServiceCreateRequestWithDefaults instantiates a new ServiceCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCreateRequestWithDefaults() *ServiceCreateRequest {
	this := ServiceCreateRequest{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ServiceCreateRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCreateRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ServiceCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ServiceCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceCreateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCreateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceCreateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceCreateRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceCreateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value
func (o *ServiceCreateRequest) GetType() ServiceType {
	if o == nil {
		var ret ServiceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServiceCreateRequest) GetTypeOk() (*ServiceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServiceCreateRequest) SetType(v ServiceType) {
	o.Type = v
}

// GetConnections returns the Connections field value
func (o *ServiceCreateRequest) GetConnections() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
func (o *ServiceCreateRequest) GetConnectionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Connections, true
}

// SetConnections sets field value
func (o *ServiceCreateRequest) SetConnections(v []string) {
	o.Connections = v
}

// GetRoutingProtocol returns the RoutingProtocol field value
func (o *ServiceCreateRequest) GetRoutingProtocol() RoutingProtocolRequest {
	if o == nil {
		var ret RoutingProtocolRequest
		return ret
	}

	return o.RoutingProtocol
}

// GetRoutingProtocolOk returns a tuple with the RoutingProtocol field value
// and a boolean to check if the value has been set.
func (o *ServiceCreateRequest) GetRoutingProtocolOk() (*RoutingProtocolRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoutingProtocol, true
}

// SetRoutingProtocol sets field value
func (o *ServiceCreateRequest) SetRoutingProtocol(v RoutingProtocolRequest) {
	o.RoutingProtocol = v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ServiceCreateRequest) GetOrder() ServiceOrderRequest {
	if o == nil || IsNil(o.Order) {
		var ret ServiceOrderRequest
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCreateRequest) GetOrderOk() (*ServiceOrderRequest, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ServiceCreateRequest) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given ServiceOrderRequest and assigns it to the Order field.
func (o *ServiceCreateRequest) SetOrder(v ServiceOrderRequest) {
	o.Order = &v
}

func (o ServiceCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["type"] = o.Type
	toSerialize["connections"] = o.Connections
	toSerialize["routingProtocol"] = o.RoutingProtocol
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"connections",
		"routingProtocol",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceCreateRequest := _ServiceCreateRequest{}

	err = json.Unmarshal(data, &varServiceCreateRequest)

	if err != nil {
		return err
	}

	*o = ServiceCreateRequest(varServiceCreateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tags")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "type")
		delete(additionalProperties, "connections")
		delete(additionalProperties, "routingProtocol")
		delete(additionalProperties, "order")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceCreateRequest struct {
	value *ServiceCreateRequest
	isSet bool
}

func (v NullableServiceCreateRequest) Get() *ServiceCreateRequest {
	return v.value
}

func (v *NullableServiceCreateRequest) Set(val *ServiceCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCreateRequest(val *ServiceCreateRequest) *NullableServiceCreateRequest {
	return &NullableServiceCreateRequest{value: val, isSet: true}
}

func (v NullableServiceCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
