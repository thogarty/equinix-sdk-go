/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// checks if the ServiceReadModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceReadModel{}

// ServiceReadModel struct for ServiceReadModel
type ServiceReadModel struct {
	Tags []string `json:"tags,omitempty"`
	// Internet access URI
	Href string `json:"href"`
	// Service identifier
	Uuid string      `json:"uuid"`
	Type ServiceType `json:"type"`
	// Name of the service This name should only contain spaces, the characters \"_\", \"-\", letters or numbers. The name cannot start or end with a \"-\". This name can have only maximum of 24 characters
	Name string `json:"name"`
	// Description of the service
	Description *string `json:"description,omitempty"`
	// Bandwidth of the service in Mbps
	Bandwidth            int64                    `json:"bandwidth"`
	Billing              ServiceBilling           `json:"billing"`
	State                ServiceState             `json:"state"`
	Change               Change                   `json:"change"`
	ChangeLog            ChangeLog                `json:"changeLog"`
	Connections          []ConnectionReadModel    `json:"connections"`
	RoutingProtocol      RoutingProtocolReadModel `json:"routingProtocol"`
	Locations            []Location               `json:"locations"`
	Account              Account                  `json:"account"`
	Project              ProjectReadModel         `json:"project"`
	Order                OrderReadModel           `json:"order"`
	AdditionalProperties map[string]interface{}
}

type _ServiceReadModel ServiceReadModel

// NewServiceReadModel instantiates a new ServiceReadModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceReadModel(href string, uuid string, type_ ServiceType, name string, bandwidth int64, billing ServiceBilling, state ServiceState, change Change, changeLog ChangeLog, connections []ConnectionReadModel, routingProtocol RoutingProtocolReadModel, locations []Location, account Account, project ProjectReadModel, order OrderReadModel) *ServiceReadModel {
	this := ServiceReadModel{}
	this.Href = href
	this.Uuid = uuid
	this.Type = type_
	this.Name = name
	this.Bandwidth = bandwidth
	this.Billing = billing
	this.State = state
	this.Change = change
	this.ChangeLog = changeLog
	this.Connections = connections
	this.RoutingProtocol = routingProtocol
	this.Locations = locations
	this.Account = account
	this.Project = project
	this.Order = order
	return &this
}

// NewServiceReadModelWithDefaults instantiates a new ServiceReadModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceReadModelWithDefaults() *ServiceReadModel {
	this := ServiceReadModel{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ServiceReadModel) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ServiceReadModel) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ServiceReadModel) SetTags(v []string) {
	o.Tags = v
}

// GetHref returns the Href field value
func (o *ServiceReadModel) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *ServiceReadModel) SetHref(v string) {
	o.Href = v
}

// GetUuid returns the Uuid field value
func (o *ServiceReadModel) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *ServiceReadModel) SetUuid(v string) {
	o.Uuid = v
}

// GetType returns the Type field value
func (o *ServiceReadModel) GetType() ServiceType {
	if o == nil {
		var ret ServiceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetTypeOk() (*ServiceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServiceReadModel) SetType(v ServiceType) {
	o.Type = v
}

// GetName returns the Name field value
func (o *ServiceReadModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceReadModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceReadModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceReadModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceReadModel) SetDescription(v string) {
	o.Description = &v
}

// GetBandwidth returns the Bandwidth field value
func (o *ServiceReadModel) GetBandwidth() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetBandwidthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bandwidth, true
}

// SetBandwidth sets field value
func (o *ServiceReadModel) SetBandwidth(v int64) {
	o.Bandwidth = v
}

// GetBilling returns the Billing field value
func (o *ServiceReadModel) GetBilling() ServiceBilling {
	if o == nil {
		var ret ServiceBilling
		return ret
	}

	return o.Billing
}

// GetBillingOk returns a tuple with the Billing field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetBillingOk() (*ServiceBilling, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Billing, true
}

// SetBilling sets field value
func (o *ServiceReadModel) SetBilling(v ServiceBilling) {
	o.Billing = v
}

// GetState returns the State field value
func (o *ServiceReadModel) GetState() ServiceState {
	if o == nil {
		var ret ServiceState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetStateOk() (*ServiceState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ServiceReadModel) SetState(v ServiceState) {
	o.State = v
}

// GetChange returns the Change field value
func (o *ServiceReadModel) GetChange() Change {
	if o == nil {
		var ret Change
		return ret
	}

	return o.Change
}

// GetChangeOk returns a tuple with the Change field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetChangeOk() (*Change, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Change, true
}

// SetChange sets field value
func (o *ServiceReadModel) SetChange(v Change) {
	o.Change = v
}

// GetChangeLog returns the ChangeLog field value
func (o *ServiceReadModel) GetChangeLog() ChangeLog {
	if o == nil {
		var ret ChangeLog
		return ret
	}

	return o.ChangeLog
}

// GetChangeLogOk returns a tuple with the ChangeLog field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetChangeLogOk() (*ChangeLog, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangeLog, true
}

// SetChangeLog sets field value
func (o *ServiceReadModel) SetChangeLog(v ChangeLog) {
	o.ChangeLog = v
}

// GetConnections returns the Connections field value
func (o *ServiceReadModel) GetConnections() []ConnectionReadModel {
	if o == nil {
		var ret []ConnectionReadModel
		return ret
	}

	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetConnectionsOk() ([]ConnectionReadModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Connections, true
}

// SetConnections sets field value
func (o *ServiceReadModel) SetConnections(v []ConnectionReadModel) {
	o.Connections = v
}

// GetRoutingProtocol returns the RoutingProtocol field value
func (o *ServiceReadModel) GetRoutingProtocol() RoutingProtocolReadModel {
	if o == nil {
		var ret RoutingProtocolReadModel
		return ret
	}

	return o.RoutingProtocol
}

// GetRoutingProtocolOk returns a tuple with the RoutingProtocol field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetRoutingProtocolOk() (*RoutingProtocolReadModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoutingProtocol, true
}

// SetRoutingProtocol sets field value
func (o *ServiceReadModel) SetRoutingProtocol(v RoutingProtocolReadModel) {
	o.RoutingProtocol = v
}

// GetLocations returns the Locations field value
func (o *ServiceReadModel) GetLocations() []Location {
	if o == nil {
		var ret []Location
		return ret
	}

	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetLocationsOk() ([]Location, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locations, true
}

// SetLocations sets field value
func (o *ServiceReadModel) SetLocations(v []Location) {
	o.Locations = v
}

// GetAccount returns the Account field value
func (o *ServiceReadModel) GetAccount() Account {
	if o == nil {
		var ret Account
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetAccountOk() (*Account, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *ServiceReadModel) SetAccount(v Account) {
	o.Account = v
}

// GetProject returns the Project field value
func (o *ServiceReadModel) GetProject() ProjectReadModel {
	if o == nil {
		var ret ProjectReadModel
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetProjectOk() (*ProjectReadModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *ServiceReadModel) SetProject(v ProjectReadModel) {
	o.Project = v
}

// GetOrder returns the Order field value
func (o *ServiceReadModel) GetOrder() OrderReadModel {
	if o == nil {
		var ret OrderReadModel
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *ServiceReadModel) GetOrderOk() (*OrderReadModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *ServiceReadModel) SetOrder(v OrderReadModel) {
	o.Order = v
}

func (o ServiceReadModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceReadModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["href"] = o.Href
	toSerialize["uuid"] = o.Uuid
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["bandwidth"] = o.Bandwidth
	toSerialize["billing"] = o.Billing
	toSerialize["state"] = o.State
	toSerialize["change"] = o.Change
	toSerialize["changeLog"] = o.ChangeLog
	toSerialize["connections"] = o.Connections
	toSerialize["routingProtocol"] = o.RoutingProtocol
	toSerialize["locations"] = o.Locations
	toSerialize["account"] = o.Account
	toSerialize["project"] = o.Project
	toSerialize["order"] = o.Order

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceReadModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"href",
		"uuid",
		"type",
		"name",
		"bandwidth",
		"billing",
		"state",
		"change",
		"changeLog",
		"connections",
		"routingProtocol",
		"locations",
		"account",
		"project",
		"order",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceReadModel := _ServiceReadModel{}

	err = json.Unmarshal(data, &varServiceReadModel)

	if err != nil {
		return err
	}

	*o = ServiceReadModel(varServiceReadModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tags")
		delete(additionalProperties, "href")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "bandwidth")
		delete(additionalProperties, "billing")
		delete(additionalProperties, "state")
		delete(additionalProperties, "change")
		delete(additionalProperties, "changeLog")
		delete(additionalProperties, "connections")
		delete(additionalProperties, "routingProtocol")
		delete(additionalProperties, "locations")
		delete(additionalProperties, "account")
		delete(additionalProperties, "project")
		delete(additionalProperties, "order")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceReadModel struct {
	value *ServiceReadModel
	isSet bool
}

func (v NullableServiceReadModel) Get() *ServiceReadModel {
	return v.value
}

func (v *NullableServiceReadModel) Set(val *ServiceReadModel) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceReadModel) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceReadModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceReadModel(val *ServiceReadModel) *NullableServiceReadModel {
	return &NullableServiceReadModel{value: val, isSet: true}
}

func (v NullableServiceReadModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceReadModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
