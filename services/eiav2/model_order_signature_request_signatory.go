/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// OrderSignatureRequestSignatory the model 'OrderSignatureRequestSignatory'
type OrderSignatureRequestSignatory string

// List of OrderSignatureRequest_signatory
const (
	ORDERSIGNATUREREQUESTSIGNATORY_SELF     OrderSignatureRequestSignatory = "SELF"
	ORDERSIGNATUREREQUESTSIGNATORY_DELEGATE OrderSignatureRequestSignatory = "DELEGATE"
	ORDERSIGNATUREREQUESTSIGNATORY_SUPPORT  OrderSignatureRequestSignatory = "SUPPORT"
)

// All allowed values of OrderSignatureRequestSignatory enum
var AllowedOrderSignatureRequestSignatoryEnumValues = []OrderSignatureRequestSignatory{
	"SELF",
	"DELEGATE",
	"SUPPORT",
}

func (v *OrderSignatureRequestSignatory) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderSignatureRequestSignatory(value)
	for _, existing := range AllowedOrderSignatureRequestSignatoryEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderSignatureRequestSignatory", value)
}

// NewOrderSignatureRequestSignatoryFromValue returns a pointer to a valid OrderSignatureRequestSignatory
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderSignatureRequestSignatoryFromValue(v string) (*OrderSignatureRequestSignatory, error) {
	ev := OrderSignatureRequestSignatory(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderSignatureRequestSignatory: valid values are %v", v, AllowedOrderSignatureRequestSignatoryEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderSignatureRequestSignatory) IsValid() bool {
	for _, existing := range AllowedOrderSignatureRequestSignatoryEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrderSignatureRequest_signatory value
func (v OrderSignatureRequestSignatory) Ptr() *OrderSignatureRequestSignatory {
	return &v
}

type NullableOrderSignatureRequestSignatory struct {
	value *OrderSignatureRequestSignatory
	isSet bool
}

func (v NullableOrderSignatureRequestSignatory) Get() *OrderSignatureRequestSignatory {
	return v.value
}

func (v *NullableOrderSignatureRequestSignatory) Set(val *OrderSignatureRequestSignatory) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderSignatureRequestSignatory) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderSignatureRequestSignatory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderSignatureRequestSignatory(val *OrderSignatureRequestSignatory) *NullableOrderSignatureRequestSignatory {
	return &NullableOrderSignatureRequestSignatory{value: val, isSet: true}
}

func (v NullableOrderSignatureRequestSignatory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderSignatureRequestSignatory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
