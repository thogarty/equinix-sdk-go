/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// checks if the RoutingProtocolRequestBgp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingProtocolRequestBgp{}

// RoutingProtocolRequestBgp struct for RoutingProtocolRequestBgp
type RoutingProtocolRequestBgp struct {
	Tags []string `json:"tags,omitempty"`
	// Allowed values: - BGP - DIRECT - STATIC
	Type string `json:"type"`
	// Name of the routing protocol instance.
	Name *string `json:"name,omitempty"`
	// Description of the routing protocol instance
	Description      *string                                         `json:"description,omitempty"`
	CustomerAsnRange *RoutingProtocolRequestBgpAllOfCustomerAsnRange `json:"customerAsnRange,omitempty"`
	// Customer Autonomous System Number
	CustomerAsn *int64 `json:"customerAsn,omitempty"`
	// BGP authentication key
	BgpAuthKey           *string                                    `json:"bgpAuthKey,omitempty"`
	ExportPolicy         RoutingProtocolRequestBgpAllOfExportPolicy `json:"exportPolicy"`
	Ipv4                 *RoutingProtocolIpv4Request                `json:"ipv4,omitempty"`
	Ipv6                 *RoutingProtocolIpv6Request                `json:"ipv6,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoutingProtocolRequestBgp RoutingProtocolRequestBgp

// NewRoutingProtocolRequestBgp instantiates a new RoutingProtocolRequestBgp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingProtocolRequestBgp(type_ string, exportPolicy RoutingProtocolRequestBgpAllOfExportPolicy) *RoutingProtocolRequestBgp {
	this := RoutingProtocolRequestBgp{}
	this.Type = type_
	this.ExportPolicy = exportPolicy
	return &this
}

// NewRoutingProtocolRequestBgpWithDefaults instantiates a new RoutingProtocolRequestBgp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingProtocolRequestBgpWithDefaults() *RoutingProtocolRequestBgp {
	this := RoutingProtocolRequestBgp{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RoutingProtocolRequestBgp) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RoutingProtocolRequestBgp) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *RoutingProtocolRequestBgp) SetTags(v []string) {
	o.Tags = v
}

// GetType returns the Type field value
func (o *RoutingProtocolRequestBgp) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RoutingProtocolRequestBgp) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RoutingProtocolRequestBgp) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RoutingProtocolRequestBgp) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RoutingProtocolRequestBgp) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoutingProtocolRequestBgp) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoutingProtocolRequestBgp) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoutingProtocolRequestBgp) SetDescription(v string) {
	o.Description = &v
}

// GetCustomerAsnRange returns the CustomerAsnRange field value if set, zero value otherwise.
func (o *RoutingProtocolRequestBgp) GetCustomerAsnRange() RoutingProtocolRequestBgpAllOfCustomerAsnRange {
	if o == nil || IsNil(o.CustomerAsnRange) {
		var ret RoutingProtocolRequestBgpAllOfCustomerAsnRange
		return ret
	}
	return *o.CustomerAsnRange
}

// GetCustomerAsnRangeOk returns a tuple with the CustomerAsnRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetCustomerAsnRangeOk() (*RoutingProtocolRequestBgpAllOfCustomerAsnRange, bool) {
	if o == nil || IsNil(o.CustomerAsnRange) {
		return nil, false
	}
	return o.CustomerAsnRange, true
}

// HasCustomerAsnRange returns a boolean if a field has been set.
func (o *RoutingProtocolRequestBgp) HasCustomerAsnRange() bool {
	if o != nil && !IsNil(o.CustomerAsnRange) {
		return true
	}

	return false
}

// SetCustomerAsnRange gets a reference to the given RoutingProtocolRequestBgpAllOfCustomerAsnRange and assigns it to the CustomerAsnRange field.
func (o *RoutingProtocolRequestBgp) SetCustomerAsnRange(v RoutingProtocolRequestBgpAllOfCustomerAsnRange) {
	o.CustomerAsnRange = &v
}

// GetCustomerAsn returns the CustomerAsn field value if set, zero value otherwise.
func (o *RoutingProtocolRequestBgp) GetCustomerAsn() int64 {
	if o == nil || IsNil(o.CustomerAsn) {
		var ret int64
		return ret
	}
	return *o.CustomerAsn
}

// GetCustomerAsnOk returns a tuple with the CustomerAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetCustomerAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.CustomerAsn) {
		return nil, false
	}
	return o.CustomerAsn, true
}

// HasCustomerAsn returns a boolean if a field has been set.
func (o *RoutingProtocolRequestBgp) HasCustomerAsn() bool {
	if o != nil && !IsNil(o.CustomerAsn) {
		return true
	}

	return false
}

// SetCustomerAsn gets a reference to the given int64 and assigns it to the CustomerAsn field.
func (o *RoutingProtocolRequestBgp) SetCustomerAsn(v int64) {
	o.CustomerAsn = &v
}

// GetBgpAuthKey returns the BgpAuthKey field value if set, zero value otherwise.
func (o *RoutingProtocolRequestBgp) GetBgpAuthKey() string {
	if o == nil || IsNil(o.BgpAuthKey) {
		var ret string
		return ret
	}
	return *o.BgpAuthKey
}

// GetBgpAuthKeyOk returns a tuple with the BgpAuthKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetBgpAuthKeyOk() (*string, bool) {
	if o == nil || IsNil(o.BgpAuthKey) {
		return nil, false
	}
	return o.BgpAuthKey, true
}

// HasBgpAuthKey returns a boolean if a field has been set.
func (o *RoutingProtocolRequestBgp) HasBgpAuthKey() bool {
	if o != nil && !IsNil(o.BgpAuthKey) {
		return true
	}

	return false
}

// SetBgpAuthKey gets a reference to the given string and assigns it to the BgpAuthKey field.
func (o *RoutingProtocolRequestBgp) SetBgpAuthKey(v string) {
	o.BgpAuthKey = &v
}

// GetExportPolicy returns the ExportPolicy field value
func (o *RoutingProtocolRequestBgp) GetExportPolicy() RoutingProtocolRequestBgpAllOfExportPolicy {
	if o == nil {
		var ret RoutingProtocolRequestBgpAllOfExportPolicy
		return ret
	}

	return o.ExportPolicy
}

// GetExportPolicyOk returns a tuple with the ExportPolicy field value
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetExportPolicyOk() (*RoutingProtocolRequestBgpAllOfExportPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExportPolicy, true
}

// SetExportPolicy sets field value
func (o *RoutingProtocolRequestBgp) SetExportPolicy(v RoutingProtocolRequestBgpAllOfExportPolicy) {
	o.ExportPolicy = v
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *RoutingProtocolRequestBgp) GetIpv4() RoutingProtocolIpv4Request {
	if o == nil || IsNil(o.Ipv4) {
		var ret RoutingProtocolIpv4Request
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetIpv4Ok() (*RoutingProtocolIpv4Request, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *RoutingProtocolRequestBgp) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given RoutingProtocolIpv4Request and assigns it to the Ipv4 field.
func (o *RoutingProtocolRequestBgp) SetIpv4(v RoutingProtocolIpv4Request) {
	o.Ipv4 = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *RoutingProtocolRequestBgp) GetIpv6() RoutingProtocolIpv6Request {
	if o == nil || IsNil(o.Ipv6) {
		var ret RoutingProtocolIpv6Request
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolRequestBgp) GetIpv6Ok() (*RoutingProtocolIpv6Request, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *RoutingProtocolRequestBgp) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given RoutingProtocolIpv6Request and assigns it to the Ipv6 field.
func (o *RoutingProtocolRequestBgp) SetIpv6(v RoutingProtocolIpv6Request) {
	o.Ipv6 = &v
}

func (o RoutingProtocolRequestBgp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingProtocolRequestBgp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.CustomerAsnRange) {
		toSerialize["customerAsnRange"] = o.CustomerAsnRange
	}
	if !IsNil(o.CustomerAsn) {
		toSerialize["customerAsn"] = o.CustomerAsn
	}
	if !IsNil(o.BgpAuthKey) {
		toSerialize["bgpAuthKey"] = o.BgpAuthKey
	}
	toSerialize["exportPolicy"] = o.ExportPolicy
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RoutingProtocolRequestBgp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"exportPolicy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutingProtocolRequestBgp := _RoutingProtocolRequestBgp{}

	err = json.Unmarshal(data, &varRoutingProtocolRequestBgp)

	if err != nil {
		return err
	}

	*o = RoutingProtocolRequestBgp(varRoutingProtocolRequestBgp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tags")
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "customerAsnRange")
		delete(additionalProperties, "customerAsn")
		delete(additionalProperties, "bgpAuthKey")
		delete(additionalProperties, "exportPolicy")
		delete(additionalProperties, "ipv4")
		delete(additionalProperties, "ipv6")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoutingProtocolRequestBgp struct {
	value *RoutingProtocolRequestBgp
	isSet bool
}

func (v NullableRoutingProtocolRequestBgp) Get() *RoutingProtocolRequestBgp {
	return v.value
}

func (v *NullableRoutingProtocolRequestBgp) Set(val *RoutingProtocolRequestBgp) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingProtocolRequestBgp) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingProtocolRequestBgp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingProtocolRequestBgp(val *RoutingProtocolRequestBgp) *NullableRoutingProtocolRequestBgp {
	return &NullableRoutingProtocolRequestBgp{value: val, isSet: true}
}

func (v NullableRoutingProtocolRequestBgp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingProtocolRequestBgp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
